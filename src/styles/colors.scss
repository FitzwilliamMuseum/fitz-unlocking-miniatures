// Project
$black: #020202;
$white: #fff;
$very-dark-grey: #0b0e0b;
$dark-grey: #0f1a21;
$blue: #0067a0;
$dark-blue: #1f2a3e;
$font-blue: #1f2a3e;
$green: #10a37c;
$orange: #ff9600;
$beige:#f7f5f4;
$menu-grey: #d9d9da;
$hover-colour:#f1efee;
$divider-grey: #d2d2d2;

$defaultColors: (
  text: $black,
  text-inverse: $white,
  title: $font-blue,
  background: $white,
  background-dark: $dark-grey,
  background-darker: $very-dark-grey,
  background-black: $black,
  border: $divider-grey,
  primary: $blue,
  secondary: $font-blue,
  accent: $orange,
  accent-high: $black,
  highlight: $green
);


// Create CSS custom properties
// This is what powers the built-in OS light/dark mode switching.
// For each color variable above (e.g. `text` and `background`) a css custom
// property will be created. (e.g. `--c-text:` and `--c-background:`).
//
// The first `@each` below will create a custom property for each item in the
// `$defaultColors` map. So put all of your default colors there.
//
// The `prefers-color-scheme: dark` media query below will then create custom
// properties for each of the colors in the `$darkColors` map only if the
// browser supports that feature. If there is an exact match (e.g. `text`) in
// both maps, the one from `$darkColors` will be used on machines that have
// opted to use the 'dark mode' on their OS.
:root {
  // Create custom properties for default colors
  @each $name, $color in $defaultColors {
    --c-#{$name}: #{$color};
  }

  // Use the default color scheme for the "Default Theme" section of the
  // component library regardless of OS setting.
  // This is required to show the correct colors in the component library at all times
  [data-theme='default'] {
    @each $name, $color in $defaultColors {
      --c-#{$name}: #{$color};
    }
  }
}